name: Deploy to GitHub Pages

# Run workflow on every push to the main branch
on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          
      - name: Restore dependencies
        run: dotnet restore src/TextFileEditor/TextFileEditor.csproj
        
      - name: Build
        run: dotnet build src/TextFileEditor/TextFileEditor.csproj --no-restore
        
      - name: Publish
        run: dotnet publish src/TextFileEditor/TextFileEditor.csproj -c Release -o release --nologo
        
      - name: List published files
        run: |
          echo "Published files in release/wwwroot:"
          ls -la release/wwwroot/
          echo "Content of index.html before modification:"
          head -20 release/wwwroot/index.html
        
      - name: Change base-tag in index.html from / to GitHub repository name
        run: |
          # Update base href for GitHub Pages
          sed -i 's/<base href="\/" \/>/<base href="\/xlogs\/" \/>/g' release/wwwroot/index.html
          
          # Verify the change was made
          echo "Updated base href in index.html:"
          grep -n "base href" release/wwwroot/index.html
        
      - name: copy index.html to 404.html for SPA fallback
        run: cp release/wwwroot/index.html release/wwwroot/404.html
        
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll
        
      - name: Copy peek.py to published site
        run: cp peek.py release/wwwroot/peek.py
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: release/wwwroot

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
